{#
/**
 * @file
 * Theme override to display a teaser node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup uikit_themeable
 */
#}
{%
  set classes = [
    'uk-article',
    'uk-margin-bottom',
  ]
%}
{%
  set content_classes = [
    'node--content',
    'uk-margin-remove-top',
  ]
%}
{%
  set title_classes = [
    'node--header',
  ]
%}
<article{{ attributes.addClass(classes) }} itemscope="" itemtype="http://schema.org/BlogPosting">
  <div uk-grid>
    {{ title_prefix }}
    <header{{ title_attributes.addClass(title_classes) }}>
      <h4 itemprop="name headline">
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h4>
      <meta itemscope itemprop="mainEntityOfPage"  itemType="https://schema.org/WebPage" itemid="http://richardbuchanan.com/{{ url }}"/>
      <link itemprop="url" href="http://richardbuchanan.com/{{ url }}">
      <meta itemprop="author" content="Richard Buchanan">
      <div class="uk-hidden" itemprop="image" itemscope itemtype="https://schema.org/ImageObject">
        <img src="{{ image_url }}"/>
        <meta itemprop="url" content="{{ image_url }}">
        <meta itemprop="width" content="{{ image_width }}">
        <meta itemprop="height" content="{{ image_height }}">
      </div>
      <div class="uk-hidden" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
        <div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject">
          <img src="https://richardbuchanan.com/sites/richardbuchanan.com/themes/custom/rcb/logo.png" />
          <meta itemprop="url" content="https://richardbuchanan.com/sites/richardbuchanan.com/themes/custom/rcb/logo.png">
          <meta itemprop="width" content="47">
          <meta itemprop="height" content="57">
        </div>
        <meta itemprop="name" content="Richard Buchanan">
      </div>
      <meta itemprop="description" content="{{ node.body.summary }}">
      <meta itemprop="datePublished" content="{{ created }}">
      <meta itemprop="dateModified" content="{{ modified }}">
    </header>
    {{ title_suffix }}

    <div{{ content_attributes.addClass(content_classes) }}>
      {% if image_default %}
        <img class="uk-align-center uk-margin-small-bottom" src="{{ image_url }}" height="{{ image_height }}" width="{{ image_width }}" />
      {% endif %}

      {%
        set main_content_classes = [
          not node.isPublished() ? 'uk-alert',
          not node.isPublished() ? 'uk-alert-warning',
        ]
      %}
      <div{{ main_attributes.addClass(main_content_classes) }}>
        {% if not node.isPublished() %}
          <p><em class="placeholder">{{ title }}</em> is currently unpublished. Use the <em class="placeholder">Edit</em> tab to publish <em class="placeholder">{{ title }}</em>.</p>
        {% endif %}

        {{ content|without('field_tags')|without('comment') }}
      </div>
    </div>
  </div>
</article>
